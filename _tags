# OASIS_START
# DO NOT EDIT (digest: 9549944bed3453fa1027175fcba3c585)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library matkit
"src/matkit.cmxs": use_matkit
# Executable matkit
<src/matkit.{native,byte}>: pkg_camlp4
<src/matkit.{native,byte}>: pkg_comparelib.syntax
<src/matkit.{native,byte}>: pkg_core
<src/matkit.{native,byte}>: pkg_core.syntax
<src/matkit.{native,byte}>: pkg_enumerate.syntax
<src/matkit.{native,byte}>: pkg_fieldslib.syntax
<src/matkit.{native,byte}>: pkg_sexplib.syntax
<src/matkit.{native,byte}>: pkg_threads
<src/matkit.{native,byte}>: pkg_treeprint
<src/matkit.{native,byte}>: pkg_variantslib.syntax
<src/matkit.{native,byte}>: use_matkit
<src/*.ml{,i}>: pkg_camlp4
<src/*.ml{,i}>: pkg_comparelib.syntax
<src/*.ml{,i}>: pkg_core
<src/*.ml{,i}>: pkg_core.syntax
<src/*.ml{,i}>: pkg_enumerate.syntax
<src/*.ml{,i}>: pkg_fieldslib.syntax
<src/*.ml{,i}>: pkg_sexplib.syntax
<src/*.ml{,i}>: pkg_threads
<src/*.ml{,i}>: pkg_treeprint
<src/*.ml{,i}>: pkg_variantslib.syntax
<src/*.ml{,i}>: use_matkit
# Executable test_typing
<src/tests/test_typing.{native,byte}>: pkg_camlp4
<src/tests/test_typing.{native,byte}>: pkg_comparelib.syntax
<src/tests/test_typing.{native,byte}>: pkg_core
<src/tests/test_typing.{native,byte}>: pkg_core.syntax
<src/tests/test_typing.{native,byte}>: pkg_enumerate.syntax
<src/tests/test_typing.{native,byte}>: pkg_fieldslib.syntax
<src/tests/test_typing.{native,byte}>: pkg_sexplib.syntax
<src/tests/test_typing.{native,byte}>: pkg_threads
<src/tests/test_typing.{native,byte}>: pkg_treeprint
<src/tests/test_typing.{native,byte}>: pkg_variantslib.syntax
<src/tests/test_typing.{native,byte}>: use_matkit
# Executable test_parsing
<src/tests/test_parsing.{native,byte}>: pkg_camlp4
<src/tests/test_parsing.{native,byte}>: pkg_comparelib.syntax
<src/tests/test_parsing.{native,byte}>: pkg_core
<src/tests/test_parsing.{native,byte}>: pkg_core.syntax
<src/tests/test_parsing.{native,byte}>: pkg_enumerate.syntax
<src/tests/test_parsing.{native,byte}>: pkg_fieldslib.syntax
<src/tests/test_parsing.{native,byte}>: pkg_sexplib.syntax
<src/tests/test_parsing.{native,byte}>: pkg_threads
<src/tests/test_parsing.{native,byte}>: pkg_treeprint
<src/tests/test_parsing.{native,byte}>: pkg_variantslib.syntax
<src/tests/test_parsing.{native,byte}>: use_matkit
# Executable test_decl
<src/tests/test_decl.{native,byte}>: pkg_camlp4
<src/tests/test_decl.{native,byte}>: pkg_comparelib.syntax
<src/tests/test_decl.{native,byte}>: pkg_core
<src/tests/test_decl.{native,byte}>: pkg_core.syntax
<src/tests/test_decl.{native,byte}>: pkg_enumerate.syntax
<src/tests/test_decl.{native,byte}>: pkg_fieldslib.syntax
<src/tests/test_decl.{native,byte}>: pkg_sexplib.syntax
<src/tests/test_decl.{native,byte}>: pkg_threads
<src/tests/test_decl.{native,byte}>: pkg_treeprint
<src/tests/test_decl.{native,byte}>: pkg_variantslib.syntax
<src/tests/test_decl.{native,byte}>: use_matkit
# Executable test_exp
<src/tests/test_exp.{native,byte}>: pkg_camlp4
<src/tests/test_exp.{native,byte}>: pkg_comparelib.syntax
<src/tests/test_exp.{native,byte}>: pkg_core
<src/tests/test_exp.{native,byte}>: pkg_core.syntax
<src/tests/test_exp.{native,byte}>: pkg_enumerate.syntax
<src/tests/test_exp.{native,byte}>: pkg_fieldslib.syntax
<src/tests/test_exp.{native,byte}>: pkg_sexplib.syntax
<src/tests/test_exp.{native,byte}>: pkg_threads
<src/tests/test_exp.{native,byte}>: pkg_treeprint
<src/tests/test_exp.{native,byte}>: pkg_variantslib.syntax
<src/tests/test_exp.{native,byte}>: use_matkit
<src/tests/*.ml{,i}>: pkg_camlp4
<src/tests/*.ml{,i}>: pkg_comparelib.syntax
<src/tests/*.ml{,i}>: pkg_core
<src/tests/*.ml{,i}>: pkg_core.syntax
<src/tests/*.ml{,i}>: pkg_enumerate.syntax
<src/tests/*.ml{,i}>: pkg_fieldslib.syntax
<src/tests/*.ml{,i}>: pkg_sexplib.syntax
<src/tests/*.ml{,i}>: pkg_threads
<src/tests/*.ml{,i}>: pkg_treeprint
<src/tests/*.ml{,i}>: pkg_variantslib.syntax
<src/tests/*.ml{,i}>: use_matkit
# OASIS_STOP

true: use_menhir, bin_annot
<src>: include
